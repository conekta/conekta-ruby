=begin
#Conekta API

#Conekta sdk

The version of the OpenAPI document: 2.1.0
Contact: engineering@conekta.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'spec_helper'
require_relative 'base_test'
require 'json'

# Unit tests for Conekta::LogsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'LogsApi' do
  before do
    # run before each test
    Conekta.configure do |config|
      config.host = BaseTest.host
      config.access_token = 'key_xxxxxx'
      config.scheme = 'http'
    end
    @api_instance = Conekta::LogsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LogsApi' do
    it 'should create an instance of LogsApi' do
      expect(@api_instance).to be_instance_of(Conekta::LogsApi)
    end
  end

  # unit tests for get_log_by_id
  # Get Log
  # Get the details of a specific log
  # @param id Identifier of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept_language Use for knowing which language to use
  # @option opts [String] :x_child_company_id In the case of a holding company, the company id of the child company to which will process the request.
  # @return [LogResponse]
  describe 'get_log_by_id test' do
    it 'should work' do
      id = '6419dd15b985080001fc280e'
      response = @api_instance.get_log_by_id(id, {accept_language: 'es'})

      expect(response).not_to be_nil
      expect(response).to be_instance_of(Conekta::LogResponse)
      expect(response.id).to eq(id)
    end
  end

  # unit tests for get_logs
  # Get List Of Logs
  # Get log details in the form of a list
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept_language Use for knowing which language to use
  # @option opts [String] :x_child_company_id In the case of a holding company, the company id of the child company to which will process the request.
  # @option opts [Integer] :limit The numbers of items to return, the maximum value is 250
  # @option opts [String] :search General order search, e.g. by mail, reference etc.
  # @option opts [String] :_next next page
  # @option opts [String] :previous previous page
  # @return [LogsResponse]
  describe 'get_logs test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      response = @api_instance.get_logs({accept_language: 'es'})

      expect(response).not_to be_nil
      expect(response.has_more).to be_truthy
      expect(response).to be_instance_of(Conekta::LogsResponse)
      expect(response.data.length).to eq(20)
    end
  end

end

=begin
#Conekta API

#Conekta sdk

The version of the OpenAPI document: 2.1.0
Contact: engineering@conekta.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Conekta::TokensApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TokensApi' do
  before do
    # run before each test
    @api_instance = Conekta::TokensApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TokensApi' do
    it 'should create an instance of TokensApi' do
      expect(@api_instance).to be_instance_of(Conekta::TokensApi)
    end
  end

  # unit tests for create_token
  # Create Token
  # Generate a payment token, to associate it with a card 
  # @param token requested field for token
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept_language Use for knowing which language to use
  # @return [TokenResponse]
  describe 'create_token test' do
    it 'should work' do
      token = Conekta::Token.new({
                                   card: {
                                     name: "Jorge LÃ³pez",
                                     expMonth: "12",
                                     expYear: "25",
                                     cvc: "123",
                                     number: "5475040095304607"
                                   }
                                 })

      response = @api_instance.create_token(token)

      expect(response).to be_instance_of(Conekta::TokenResponse)
      expect(response.id).to eq('tok_2toPJUcZ27AH5LsZk')
      expect(response.used).to eq(false)
      expect(response.livemode).to eq(true)
      expect(response.checkout).to be_nil
    end
    it 'empty token' do
      token = Conekta::Token.new({
                                   checkout: Conekta::TokenCheckout.new({returns_control_on: "Token"})
                                 })

      response = @api_instance.create_token(token)

      expect(response).to be_instance_of(Conekta::TokenResponse)
      expect(response.id).to eq('tok_2toNoPZpJgRU4PvgZ')
      expect(response.checkout).not_to be_nil
      expect(response.checkout.status).to eq('Issued')
    end
  end

end

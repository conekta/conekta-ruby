=begin
#Conekta API

#Conekta sdk

The version of the OpenAPI document: 2.2.0
Contact: engineering@conekta.com
Generated by: https://openapi-generator.tech
Generator version: 7.5.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Conekta::AntifraudApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AntifraudApi' do
  before do
    # run before each test
    @api_instance = Conekta::AntifraudApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AntifraudApi' do
    it 'should create an instance of AntifraudApi' do
      expect(@api_instance).to be_instance_of(Conekta::AntifraudApi)
    end
  end

  # unit tests for create_rule_blacklist
  # Create blacklisted rule
  # @param create_risk_rules_data requested field for blacklist rule
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept_language Use for knowing which language to use
  # @return [BlacklistRuleResponse]
  describe 'create_rule_blacklist test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_rule_whitelist
  # Create whitelisted rule
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept_language Use for knowing which language to use
  # @option opts [CreateRiskRulesData] :create_risk_rules_data 
  # @return [WhitelistlistRuleResponse]
  describe 'create_rule_whitelist test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_rule_blacklist
  # Delete blacklisted rule
  # @param id Identifier of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept_language Use for knowing which language to use
  # @option opts [String] :x_child_company_id In the case of a holding company, the company id of the child company to which will process the request.
  # @return [DeletedBlacklistRuleResponse]
  describe 'delete_rule_blacklist test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_rule_whitelist
  # Delete whitelisted rule
  # @param id Identifier of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept_language Use for knowing which language to use
  # @option opts [String] :x_child_company_id In the case of a holding company, the company id of the child company to which will process the request.
  # @return [DeletedWhitelistRuleResponse]
  describe 'delete_rule_whitelist test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_rule_blacklist
  # Get list of blacklisted rules
  # Return all rules
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept_language Use for knowing which language to use
  # @return [RiskRulesList]
  describe 'get_rule_blacklist test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_rule_whitelist
  # Get a list of whitelisted rules
  # Return all rules
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept_language Use for knowing which language to use
  # @return [RiskRulesList]
  describe 'get_rule_whitelist test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end

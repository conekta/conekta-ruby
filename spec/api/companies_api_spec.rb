=begin
#Conekta API

#Conekta sdk

The version of the OpenAPI document: 2.1.0
Contact: engineering@conekta.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Conekta::CompaniesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CompaniesApi' do
  before do
    @api_instance = Conekta::CompaniesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CompaniesApi' do
    it 'should create an instance of CompaniesApi' do
      expect(@api_instance).to be_instance_of(Conekta::CompaniesApi)
    end
  end

  # unit tests for get_companies
  # Get List of Companies
  # Consume the list of child companies.  This is used for holding companies with several child entities.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept_language Use for knowing which language to use
  # @option opts [Integer] :limit The numbers of items to return, the maximum value is 250
  # @option opts [String] :search General order search, e.g. by mail, reference etc.
  # @option opts [String] :_next next page
  # @option opts [String] :previous previous page
  # @return [GetCompaniesResponse]
  describe 'get_companies test' do
    it 'should work' do
      response = @api_instance.get_companies({accept_language: 'es', limit: 20})

      expect(response).to be_instance_of(Conekta::GetCompaniesResponse)
      expect(response.data.first).to be_instance_of(Conekta::CompanyResponse)
      expect(response.data.length).to eq(1)
    end
  end

  # unit tests for get_company
  # Get Company
  # @param id Identifier of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept_language Use for knowing which language to use
  # @return [CompanyResponse]
  describe 'get_company test' do
    it 'should work' do
      id ='6441bb27659a060465da7335'

      response = @api_instance.get_company(id, {accept_language: 'es'})

      expect(response).to be_instance_of(Conekta::CompanyResponse)
      expect(response.id).to eq(id)
    end
  end

end

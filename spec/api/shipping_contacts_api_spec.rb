=begin
#Conekta API

#Conekta sdk

The version of the OpenAPI document: 2.1.0
Contact: engineering@conekta.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Conekta::ShippingContactsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ShippingContactsApi' do
  before do
    # run before each test
    @api_instance = Conekta::ShippingContactsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ShippingContactsApi' do
    it 'should create an instance of ShippingContactsApi' do
      expect(@api_instance).to be_instance_of(Conekta::ShippingContactsApi)
    end
  end

  # unit tests for create_customer_shipping_contacts
  # Create a shipping contacts
  # Create a shipping contacts for a customer.
  # @param id Identifier of the resource
  # @param customer_shipping_contacts requested field for customer shippings contacts
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept_language Use for knowing which language to use
  # @option opts [String] :x_child_company_id In the case of a holding company, the company id of the child company to which will process the request.
  # @return [CustomerShippingContactsResponse]
  describe 'create_customer_shipping_contacts test' do
    it 'should work' do
      id = "cus_2tXyF9BwPG14UMkkg"
      request = Conekta::CustomerShippingContacts.new({
                                                        address: Conekta::CustomerShippingContactsAddress.new({
                                                                                                                street1: "av siem",
                                                                                                                city: "mexico",
                                                                                                                country: "mx",
                                                                                                                postal_code: "11000"
                                                                                                              }),
                                                        phone: "1234567890",
                                                        receiver: "receiver"
                                                      })
      response = @api_instance.create_customer_shipping_contacts(id, request)

      expect(response).to be_instance_of(Conekta::CustomerShippingContactsResponse)
      expect(response.parent_id).to eq(id)
      expect(response.address.country).to eq(request.address.country)
      expect(response.id).to be_truthy
      expect(response.created_at).to eq(1679009479)
    end
  end

  # unit tests for delete_customer_shipping_contacts
  # Delete shipping contacts
  # Delete shipping contact that corresponds to a customer ID.
  # @param id Identifier of the resource
  # @param shipping_contacts_id identifier
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept_language Use for knowing which language to use
  # @option opts [String] :x_child_company_id In the case of a holding company, the company id of the child company to which will process the request.
  # @return [CustomerShippingContactsResponse]
  describe 'delete_customer_shipping_contacts test' do
    it 'should work' do
      id = 'cus_2tZWxbTPtQgGJGh8P'
      shipping_contact_id = 'ship_cont_2tZWzJPBf87C6TcoQ'

      response = @api_instance.delete_customer_shipping_contacts(id, shipping_contact_id)

      expect(response).to be_instance_of(Conekta::CustomerShippingContactsResponse)
      expect(response.parent_id).to eq(id)
      expect(response.id).to eq(shipping_contact_id)
    end
  end

  # unit tests for update_customer_shipping_contacts
  # Update shipping contacts
  # Update shipping contact that corresponds to a customer ID.
  # @param id Identifier of the resource
  # @param shipping_contacts_id identifier
  # @param customer_update_shipping_contacts requested field for customer update shippings contacts
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept_language Use for knowing which language to use
  # @option opts [String] :x_child_company_id In the case of a holding company, the company id of the child company to which will process the request.
  # @return [CustomerShippingContactsResponse]
  describe 'update_customer_shipping_contacts test' do
    it 'should work' do
      id = "cus_2tZWxbTPtQgGJGh8P";
      shipping_contacts_id = "ship_cont_2tZWzJPBf87C6TcoQ"
      request = Conekta::CustomerUpdateShippingContacts.new({
                                                              phone: "3143145050"
                                                            })

      response = @api_instance.update_customer_shipping_contacts(id, shipping_contacts_id, request)

      expect(response).to be_instance_of(Conekta::CustomerShippingContactsResponse)
      expect(response.phone).to eq(request.phone)
      expect(response.parent_id).to eq(id)
      expect(response.id).to eq(shipping_contacts_id)
      expect(response.default).to eq(false)
    end
  end

end
